"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebSocketMessageWriter = void 0;
const messageWriter_1 = require("vscode-jsonrpc/lib/common/messageWriter");
class WebSocketMessageWriter extends messageWriter_1.AbstractMessageWriter {
    constructor(socket) {
        super();
        this.socket = socket;
        this.errorCount = 0;
    }
    end() {
    }
    write(msg) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const content = JSON.stringify(msg);
                this.socket.send(content);
            }
            catch (e) {
                this.errorCount++;
                this.fireError(e, msg, this.errorCount);
            }
        });
    }
}
exports.WebSocketMessageWriter = WebSocketMessageWriter;
//# sourceMappingURL=writer.js.map